/* base version: 5
 * Buffer: char *data; char *dptr; size_t dsize;
 * ListNode: char *data; struct { struct ListNode *stqe_next; } entries;
 * Address: char *personal; char *mailbox; _Bool group : 1; _Bool is_intl : 1; _Bool intl_checked : 1; struct { struct Address *tqe_next; struct Address **tqe_prev; } entries;
 * Parameter: char *attribute; char *value; struct { struct Parameter *tqe_next; struct Parameter **tqe_prev; } entries;
 * Body: char *xtype; char *subtype; char *language; struct ParameterList parameter; char *description; char *form_name; long hdr_offset; off_t offset; off_t length; char *filename; char *d_filename; char *charset; struct Content *content; struct Body *next; struct Body *parts; struct Email *email; struct AttachPtr *aptr; signed short attach_count; time_t stamp; struct Envelope *mime_headers; unsigned int type : 4; unsigned int encoding : 3; unsigned int disposition : 2; _Bool use_disp : 1; _Bool unlink : 1; _Bool tagged : 1; _Bool deleted : 1; _Bool noconv : 1; _Bool force_charset : 1; _Bool goodsig : 1; _Bool warnsig : 1; _Bool badsig : 1; _Bool collapsed : 1; _Bool attach_qualifies : 1;
 * Email: SecurityFlags security; _Bool mime : 1; _Bool flagged : 1; _Bool tagged : 1; _Bool deleted : 1; _Bool purge : 1; _Bool quasi_deleted : 1; _Bool changed : 1; _Bool attach_del : 1; _Bool old : 1; _Bool read : 1; _Bool expired : 1; _Bool superseded : 1; _Bool replied : 1; _Bool subject_changed : 1; _Bool threaded : 1; _Bool display_subject : 1; _Bool recip_valid : 1; _Bool active : 1; _Bool trash : 1; unsigned int zhours : 5; unsigned int zminutes : 6; _Bool zoccident : 1; _Bool searched : 1; _Bool matched : 1; _Bool attach_valid : 1; _Bool collapsed : 1; _Bool limited : 1; size_t num_hidden; short recipient; int pair; time_t date_sent; time_t received; off_t offset; int lines; int index; int msgno; int vnum; int score; struct Envelope *env; struct Body *content; char *path; char *tree; struct MuttThread *thread; short attach_total; struct TagList tags; char *maildir_flags; void *edata; void (*free_edata)(void **ptr); struct Notify *notify;
 * Envelope: struct AddressList return_path; struct AddressList from; struct AddressList to; struct AddressList cc; struct AddressList bcc; struct AddressList sender; struct AddressList reply_to; struct AddressList mail_followup_to; struct AddressList x_original_to; char *list_post; char *subject; char *real_subj; char *disp_subj; char *message_id; char *supersedes; char *date; char *x_label; char *organization; char *newsgroups; char *xref; char *followup_to; char *x_comment_to; struct Buffer spam; struct ListHead references; struct ListHead in_reply_to; struct ListHead userhdrs; unsigned char changed;
 */
#define HCACHEVER 0x831a3af4
